name: uBO Lite release

on: workflow_dispatch

permissions:
  contents: read

jobs:
  build:
    permissions:
      contents: write # for creating release
    name: Build packages
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      # Set uBO version to use
      - name: uBO version to use
        run: |
          UBO_VERSION_URL=$(cat ubo-version)
          UBO_VERSION=${UBO_VERSION_URL: -40}
          echo "UBO_VERSION=$UBO_VERSION" >> $GITHUB_ENV
      # Clone uBO repo
      - name: Clone uBO repo
        run: |
          UBLOCK_REPO_DIR=$(mktemp -d)
          echo "UBLOCK_REPO_DIR=$UBLOCK_REPO_DIR" >> $GITHUB_ENV
          git clone --depth 1 https://github.com/gorhill/uBlock.git $UBLOCK_REPO_DIR
      # Version, time-based
      - name: Create unique time-based version
        run: |
          TAGNAME=uBOLite_$(date -u "+%Y.%-m.%-d.")$(date -u "+%H*60+%M" | bc)
          echo "TAGNAME=$TAGNAME" >> $GITHUB_ENV
          echo "Version: $TAGNAME"
      # Chromium
      - name: Build Chromium uBOLite MV3 packages
        run: |
          UBOL_REPO_DIR=$(pwd)
          cd $UBLOCK_REPO_DIR
          tools/make-mv3.sh chromium ${{ env.TAGNAME }} before=$UBOL_REPO_DIR
          echo "CHROMIUM_PACKAGE=${{ env.TAGNAME }}.chromium.mv3.zip" >> $GITHUB_ENV
          cd - > /dev/null
          rm -rf chromium
          mv "$UBLOCK_REPO_DIR/dist/build/uBOLite.chromium" chromium
          cp "$UBLOCK_REPO_DIR/dist/build/mv3-data/log.txt" chromium/
      # Upload Chromium uBOLite MV3 package artifact
      - name: Upload Chromium uBOLite MV3 package
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.TAGNAME }}.chromium.mv3.zip
          path: ${{ env.UBLOCK_REPO_DIR }}/dist/build/${{ env.CHROMIUM_PACKAGE }}
